/* Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type. /*

class Solution {
    public boolean isValid(String str) {
        Stack<Character> st=new Stack<>();

        int e=0;
        for(int i=0;i<str.length();i++)
        {
            char ch=str.charAt(i);
            if(ch=='(' || ch=='{' || ch=='[')
                st.push(ch);
            if(ch==')' || ch=='}' || ch==']')
            {
                if(st.isEmpty())
                    return false;

                if(ch==')')
                { 
                    if(st.peek()=='(')
                        st.pop();
                    else
                        return false;
                }
                if(ch=='}')
                { 
                    if(st.peek()=='{')
                        st.pop();
                    else
                        return false;
                }
                if(ch==']')
                { 
                    if(st.peek()=='[')
                        st.pop();
                    else
                        return false;
                }
            }
        }

            if(st.isEmpty())
                return true;
            else
                return false;
        
    }
}
