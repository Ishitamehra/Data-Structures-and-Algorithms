/* Given a binary tree having n nodes. Check whether all of its nodes have the value equal to the sum of their child nodes. Return 1 if all the nodes in the tree satisfy the given properties, else it return 0.

For every node, data value must be equal to the sum of data values in left and right children. Consider data value as 0 for NULL child.  Also, leaves are considered to follow the property. */

class Solution
{
    //Function to check whether all nodes of a tree have the value 
    //equal to the sum of their child nodes.
    public static int isSumProperty(Node root)
    {
        return isSumProperty2(root)? 1:0;
    }
    
    public static boolean isSumProperty2(Node root)
    {
        if(root==null)
            return true;
            
        if(root.left==null && root.right==null)
            return true;
            
        int sum=0;
        if(root.left!=null)
            sum+=root.left.data;
        
        if(root.right!=null)
            sum+=root.right.data;
            
        return (sum==root.data && isSumProperty2(root.left) && isSumProperty2(root.right));
    }
}
