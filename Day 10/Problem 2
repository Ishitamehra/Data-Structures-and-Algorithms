/* Given a set of N items, each with a weight and a value, represented by the array w and val respectively. Also, a knapsack with weight limit W.
The task is to fill the knapsack in such a way that we can get the maximum profit. Return the maximum profit.
Note: Each item can be taken any number of times. */

class Solution{
    static int knapSack(int N, int W, int val[], int wt[])
    {
        int dp[][]=new int[N+1][W+1];
        
        for(int i=1;i<N+1;i++)
        {
            for(int j=1;j<W+1;j++)
            {
                int w=wt[i-1];
                int v=val[i-1];
                if(w<=j)
                {
                    int val1=v+dp[i][j-w];  //include
                    int val2=dp[i-1][j];    //exclude
                    dp[i][j]=Math.max(val1,val2);
                }
                else
                   dp[i][j]=dp[i-1][j]; 
            }
        }
        return dp[N][W];
    }
}
