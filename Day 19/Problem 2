/*Given the root of a binary tree, return the length of the diameter of the tree.

The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.

The length of a path between two nodes is represented by the number of edges between them. */

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int diameterOfBinaryTree(TreeNode root) {
        Info val=diameter(root);
        return val.diam; 
    }

    public static Info diameter(TreeNode root)
    {
        if(root==null)
            return new Info(0,0);

        Info ld=diameter(root.left);
        Info rd=diameter(root.right);

        int fdiam=Math.max(ld.height+rd.height,Math.max(ld.diam,rd.diam));
        int fheight=Math.max(ld.height,rd.height)+1;

        return new Info(fdiam,fheight);
    }
}

class Info
{
    int diam;
    int height;

    public Info(int diam,int height)
    {
        this.diam=diam;
        this.height=height;
    }
}
