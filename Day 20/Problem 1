/* Given below is a binary tree. The task is to print the top view of binary tree. Top view of a binary tree is the set of nodes visible when the tree is viewed from the top. For the given below tree

       1
    /     \
   2       3
  /  \    /   \
4    5  6   7

Top view will be: 4 2 1 3 7 /*

class Pair
{
    Node node;
    int val;
    
    Pair(Node node,int val)
    {
        this.node=node;
        this.val=val;
    }
}


class Solution {
    // Function to return a list of nodes visible from the top view
    // from left to right in Binary Tree.
    static ArrayList<Integer> topView(Node root) {
        
        ArrayList<Integer> list=new ArrayList<>();
        
        if(root==null)
            return list;
        
        Map<Integer,Integer> map=new HashMap<>();
        Queue<Pair> q=new LinkedList<>();
        q.add(new Pair(root,0));
        int min=Integer.MAX_VALUE;
        int max=Integer.MIN_VALUE;
        
        while(!q.isEmpty())
        {
            
            Pair curr=q.remove();
            Node value=curr.node;
            int hd=curr.val;
            
            if(!map.containsKey(hd))
            {
                map.put(hd,value.data);
            }
            
            
            if(value.left!=null)
                q.add(new Pair(value.left,hd-1));
                
            if(value.right!=null)
                q.add(new Pair(value.right,hd+1));
                
            min=Math.min(min,hd);
            max=Math.max(max,hd);
        }
        
        for(int i=min;i<=max;i++)
            list.add(map.get(i));
            
        return list;
        
    }
}

