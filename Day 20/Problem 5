/* Given a Binary Tree of nodes, you need to find all the possible paths from the root node to all the leaf nodes of the binary tree. */

class Solution {
    
    
    public static ArrayList<ArrayList<Integer>> Paths(Node root) {
        ArrayList<Integer> list1=new ArrayList<>();
        ArrayList<ArrayList<Integer>> list2=new ArrayList<>();
        addleft(root,list1,list2);
        return list2;
    }
    
    public static ArrayList<ArrayList<Integer>> addleft(Node root,ArrayList<Integer> list1, ArrayList<ArrayList<Integer>> list2)
    {
        if(root==null)
           return list2;
          
        list1.add(root.data);
        //System.out.println(list1);
           
        if(isLeaf(root))
        {
            list2.add(new ArrayList<Integer>(list1));
        }
        else
        {
        addleft(root.left,list1,list2);
        addleft(root.right,list1,list2);
        }
        list1.remove(list1.size() - 1); // backtrack
        return list2;
    }
    
    public static boolean isLeaf(Node root)
    {
        if(root.left==null && root.right==null && root!=null)
            return true;
        return false;
    }
}
