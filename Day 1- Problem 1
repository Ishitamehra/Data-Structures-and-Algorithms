/* Your task is to implement  2 stacks in one array efficiently. You need to implement 4 methods.

twoStacks : Initialize the data structures and variables to be used to implement  2 stacks in one array.
push1 : pushes element into first stack.
push2 : pushes element into second stack.
pop1 : pops element from first stack and returns the popped element. If first stack is empty, it should return -1.
pop2 : pops element from second stack and returns the popped element. If second stack is empty, it should return -1. */

class twoStacks
{
    Stack<Integer> s1=new Stack<>();;
    Stack<Integer> s2=new Stack<>();;
    twoStacks()
    {
        Stack<Integer> s1;
        Stack<Integer> s2;
    }
    //Function to push an integer into the stack1.
    void push1(int x)
    {
        s1.push(x);
    }
    //Function to push an integer into the stack2.
    void push2(int x)
    {
       s2.push(x);
    }
    //Function to remove an element from top of the stack1.
    int pop1()
    {
        if(s1.isEmpty())
            return -1;
            
        return s1.pop();
    }
    //Function to remove an element from top of the stack2.
    int pop2()
    {
        if(s2.isEmpty())
            return -1;
            
        return s2.pop();
    }
}
